@model FPTBook.Models.Book

@{
    ViewBag.Title = "Update Boook";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


@if (ViewBag.Success != null)
{
    <script type="text/javascript">
    window.onload = function () {
        alert("@ViewBag.Success");
    };
    </script>
}
<head>
    <style>
        .img-update {
            width: 100px;
            height: 150px;
        }
    </style>
</head>
<body>
    <section>
        <div class="form-container">
            <div class="image-holder"></div>
            <div class="card-body">
                @using (Html.BeginForm("Update", "Books", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
                {
                    <h2 align="center"><b>Update Book</b></h2>
                    <hr />
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.AuthorID)

                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <strong>
                                    @Html.LabelFor(model => model.BookID, htmlAttributes: new { @class = "col-md-5 control-label" })
                                </strong>
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.BookID, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                                    @Html.ValidationMessageFor(model => model.BookID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <strong>@Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "col-md-5 control-label" })</strong>
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "col-md-5 control-label" })
                                <div class="col-md-7">
                                    @Html.DropDownList("CategoryID", null, "Choose Category",htmlAttributes: new { @class = "form-control", @required = "" })
                                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AuthorID, htmlAttributes: new { @class = "col-md-5 control-label" })
                                <div class="col-md-7">
                                    @Html.DropDownList("AuthorID", null, "Choose Author", htmlAttributes: new { @class = "form-control", @required = "" })
                                    @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PublisherID, htmlAttributes: new { @class = "col-md-5 control-label" })
                                <div class="col-md-7">
                                    @Html.DropDownList("PublisherID", null, "Choose Publisher", htmlAttributes: new { @class = "form-control", @required = "" })
                                    @Html.ValidationMessageFor(model => model.PublisherID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "col-md-5 control-label" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @required = "", @placeholder = "Enter Quantity", @min = 1 } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "col-md-5 control-label" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @required = "", @placeholder = "Enter Price", @min = 1 } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <strong>@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-5 control-label" })</strong>
                                <div class="col-md-7">
                                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "col-md-5 control-label" })
                                <div class="col-md-7">
                                    <label class="form-label">Current Image &nbsp;&nbsp;&nbsp;&nbsp;</label>
                                    <img src="~/Image/@Model.Image" class="img-update" /><br />
                                    <br />
                                    <label class="form-label">New book image</label>
                                    <input class="form-control" type="file" name="image" id="image">
                                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-5 col-md-7">
                                    <input class="btn btn-primary" type="submit" value="Update" />
                                    <a class="btn btn-primary" role="button" href="@Url.Action("Index", "Books")">Cancel</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</body>
